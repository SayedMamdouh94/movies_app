name: movies_app
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: "none" # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: ^3.8.1

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  flutter_localizations:
    sdk: flutter
  dev: ^1.0.0
  dio: ^5.8.0+1
  get_it: ^8.0.3
  flutter_screenutil: ^5.9.3
  intl: ^0.20.2
  top_snackbar_flutter: ^3.3.0
  flutter_secure_storage: ^9.2.4
  retrofit: ^4.4.2
  pretty_dio_logger: ^1.4.0
  file_picker: ^10.2.0
  image_picker: ^1.1.2
  flutter_svg: ^2.1.0
  shimmer: ^3.0.0
  timer_count_down: ^2.2.2
  flutter_spinkit: ^5.2.1
  cached_network_image: ^3.4.1
  json_serializable: ^6.9.5
  json_annotation: ^4.9.0
  pin_code_fields: ^8.0.1
  permission_handler: ^11.3.1
  image_gallery_saver: ^1.7.1
  path_provider: ^2.1.4
  http: ^1.2.2
  device_info_plus: ^11.1.0
  firebase_core: ^3.14.0
  flutter_bloc: ^9.1.1
  bloc: ^9.0.0
  intl_utils: ^2.8.11
  shared_preferences: ^2.5.3
  sqflite: ^2.4.1

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.8
  path: ^1.9.1

dev_dependencies:
  flutter_test:
    sdk: flutter
  flutter_native_splash: ^2.4.6
  build_runner: ^2.4.15
  retrofit_generator: ^9.2.0

  # Testing dependencies
  mocktail: ^1.0.4
  bloc_test: ^10.0.0
  integration_test:
    sdk: flutter
  patrol: ^3.13.1

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^5.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:
  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true
  generate: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/images/
    - assets/svgs/
    - assets/fonts/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/to/resolution-aware-images

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/to/asset-from-package

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
    - family: NotoSansArabic
      fonts:
        - asset: assets/fonts/NotoSansArabic-Light.ttf
          weight: 300
        - asset: assets/fonts/NotoSansArabic-Regular.ttf
          weight: 400
        - asset: assets/fonts/NotoSansArabic-Medium.ttf
          weight: 500
        - asset: assets/fonts/NotoSansArabic-SemiBold.ttf
          weight: 600
        - asset: assets/fonts/NotoSansArabic-Bold.ttf
          weight: 700
        - asset: assets/fonts/NotoSansArabic-ExtraBold.ttf
          weight: 800
        - asset: assets/fonts/NotoSansArabic-Black.ttf
          weight: 900

flutter_intl:
  enabled: true
  class_name: AppLocalizations
  main_locale: en
  arb_dir: lib/core/localization/l10n
  output_dir: lib/core/localization/generated

  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/to/font-from-package
